#include <bits/stdc++.h>
using namespace std;

struct Node
{
    int data;
    Node *next;
    Node(int val)
    {
        data = val;
        next = nullptr;
    }
};

Node *arrayOfLists[10];

void addNode(Node *&head, int val)
{
    Node *newNode = new Node(val);
    if (head == nullptr)
    {
        head = newNode;
        return;
    }
    Node *temp = head;
    while (temp->next != nullptr)
    {
        temp = temp->next;
    }
    temp->next = newNode;
}

bool deleteNode(Node *&head, int val)
{
    if (head == nullptr)
        return false;
    if (head->data == val)
    {
        Node *temp = head;
        head = head->next;
        delete temp;
        return true;
    }
    Node *curr = head;
    while (curr->next != nullptr && curr->next->data != val)
    {
        curr = curr->next;
    }
    if (curr->next == nullptr)
        return false;
    Node *temp = curr->next;
    curr->next = temp->next;
    delete temp;
    return true;
}

bool searchNode(Node *head, int val)
{
    Node *temp = head;
    while (temp != nullptr)
    {
        if (temp->data == val)
            return true;
        temp = temp->next;
    }
    return false;
}

void displayTable()
{
    cout << "\nHash Table:\n";
    for (int i = 0; i < 10; i++)
    {
        cout << i << ": ";
        Node *temp = arrayOfLists[i];
        while (temp != nullptr)
        {
            cout << temp->data << " -> ";
            temp = temp->next;
        }
        cout << "NULL\n";
    }
}

int main()
{
    for (int i = 0; i < 10; i++)
    {
        arrayOfLists[i] = nullptr;
    }

    int choice, num;
    do
    {
        cout << "\nMenu:\n";
        cout << "1. Insert a number\n";
        cout << "2. Delete a number\n";
        cout << "3. Search a number\n";
        cout << "4. Display Hash Table\n"; // new option here
        cout << "5. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice)
        {
        case 1:
            cout << "Enter number to insert: ";
            cin >> num;
            addNode(arrayOfLists[num % 10], num);
            break;

        case 2:
            cout << "Enter number to delete: ";
            cin >> num;
            if (deleteNode(arrayOfLists[num % 10], num))
                cout << "Number deleted successfully.\n";
            else
                cout << "Number not found.\n";
            break;

        case 3:
            cout << "Enter number to search: ";
            cin >> num;
            if (searchNode(arrayOfLists[num % 10], num))
                cout << "Number found in table.\n";
            else
                cout << "Number not found.\n";
            break;

        case 4:
            displayTable();
            break;

        case 5:
            cout << "Exiting...\n";
            break;

        default:
            cout << "Invalid choice! Try again.\n";
        }
    } while (choice != 5);

    return 0;
}
